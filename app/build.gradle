apply plugin: 'com.android.application'

android {
    signingConfigs {
        debug {
            storeFile file(System.getProperty("user.home") + "/.keystore")
            storePassword '19monkeys'
            keyAlias 'key0'
            keyPassword '19monkeys'
        }
        release {
            storeFile file(System.getProperty("user.home") + "/.release_keystore")
            storePassword 'your-release-password'
            keyAlias 'release-key'
            keyPassword 'your-release-password'
        }
    }

    compileSdk 35  // Keeping Android 14

    defaultConfig {
        applicationId "com.ld.tageditor"
        minSdk 21  // Minimum SDK 21 (Lollipop)
        //noinspection EditedTargetSdkVersion
        targetSdk 35  // compatible with Android 14+
        versionCode 2  // Incremented for compatibility
        versionName "2.1"

        vectorDrawables.useSupportLibrary = true

        def commit = "unknown"
        try {
            commit = 'git rev-parse --short HEAD'.execute().text.trim()
        } catch (Exception ignored) { }
        project.archivesBaseName = "LDTagEditor-" + commit
    }

    splits {
        abi {
            enable false
            // reset()
            //include "arm64-v8a", "armeabi-v7a", "x86_64" // Added x86_64 for broader compatibility
            // universalApk true // Allows a universal APK
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release  // Use proper signing config
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    namespace 'com.ld.tageditor'

    lint {
        abortOnError false
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            output.outputFileName = "${project.archivesBaseName}.apk"
        }
    }

    configurations.configureEach {
        resolutionStrategy {
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.22'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.21"
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.webkit:webkit:1.12.1'
    implementation("androidx.core:core-ktx:1.15.0") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk8"
    }
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.7") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk8"
    }
}
